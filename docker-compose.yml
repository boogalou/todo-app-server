services:
  taskflow-api:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    container_name: taskflow-api
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - taskflow-db
      - taskflow-cache
      - taskflow-storage
    networks:
      - taskflow-network
      - backend

  taskflow-db:
    image: postgres:16-alpine3.20
    container_name: taskflow-db
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - taskflow-network
      - backend

  taskflow-cache:
    image: redis:alpine
    container_name: taskflow-cache
    ports:
      - "6379:6379"
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command:  ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--save", "60 1", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - taskflow-network
      - backend

  taskflow-storage:
    image: minio/minio:latest
    container_name: taskflow-storage
    ports:
      - '9000:9000'
      - '9001:9001'
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    command: server ~/minio --console-address :9001
    volumes:
      - minio_data:/data
    networks:
      - taskflow-network
      - backend

volumes:
  postgres_data:
  minio_data:
  redis_data:

networks:
  taskflow-network:
    external: true
  backend: